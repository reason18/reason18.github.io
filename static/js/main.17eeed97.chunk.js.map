{"version":3,"sources":["TicTacToe/helpers.js","TicTacToe/components/CellItem.jsx","TicTacToe/components/GameBoard.jsx","TicTacToe/components/GameSettings.jsx","TicTacToe/components/GameStatus.jsx","TicTacToe/TicTacToe.jsx","index.js"],"names":["GameStages","NOT_STARTED","STARTED","ENDED","processUserAction","cells","cellIndex","playerKey","playerValues","updCells","Object","toConsumableArray","forEach","element","concat","isWinner","userInput","parsedInput","parseInt","some","el","checkTheWinner","emptyExist","item","gameStatus","CellItem","_ref","onClick","index","currentStatus","cellKey","checked","disabled","react_default","a","createElement","data-index","type","data-key","GameBoard","props","id","map","i","CellItem_CellItem","assign","key","GameSettings","onChange","e","target","startPlayer","dataset","player","console","log","className","data-player","defaultChecked","name","SwitchStatusContent","currentTurn","winner","GameStatus","GameStatus_SwitchStatusContent","defaultState","players","X","O","Array","settings","TicTacToe","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","objectSpread","setUserValue","_this$state","nextTurn","result","setState","onChangeSettings","startGame","resetTheGame","inherits","createClass","value","GameSettings_GameSettings","GameBoard_GameBoard","GameStatus_GameStatus","React","Component","rootElement","document","getElementById","ReactDOM","render","TicTacToe_TicTacToe"],"mappings":"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","file":"static/js/main.17eeed97.chunk.js","sourcesContent":["const NOT_STARTED = 1;\r\nconst STARTED = 2;\r\nconst ENDED = 3;\r\n\r\nexport const GameStages = {\r\n  NOT_STARTED,\r\n  STARTED,\r\n  ENDED\r\n};\r\n\r\nconst checkTheWinner = userInput => {\r\n  const comb = [7, 56, 73, 84, 146, 273, 292, 448];\r\n\r\n  let parsedInput = parseInt(userInput, 2);\r\n  return comb.some(el => (el & parsedInput) === el);\r\n};\r\n\r\nexport const processUserAction = (cells, cellIndex, playerKey) => {\r\n  let playerValues = \"\";\r\n  let updCells = [...cells];\r\n  updCells[cellIndex] = playerKey;\r\n  updCells.forEach(element => {\r\n    let cellValue = element === playerKey ? \"1\" : \"0\";\r\n    playerValues = `${cellValue}${playerValues}`;\r\n  });\r\n  let isWinner = checkTheWinner(playerValues);\r\n  let emptyExist = updCells.some(item => !item);\r\n  let gameStatus = emptyExist && !isWinner ? STARTED : ENDED;\r\n\r\n  return {\r\n    updCells,\r\n    gameStatus,\r\n    isWinner\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { GameStages } from \"../helpers\";\r\n\r\nexport const CellItem = ({ onClick, index, currentStatus, cellKey }) => {\r\n  const checked = !!cellKey;\r\n  const disabled = currentStatus !== GameStages.STARTED || checked;\r\n\r\n  return (\r\n    <div>\r\n      <label>\r\n        <input\r\n          data-index={index}\r\n          type=\"checkbox\"\r\n          onClick={onClick}\r\n          checked={checked}\r\n          disabled={disabled}\r\n        />\r\n        <span data-key={cellKey} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { CellItem } from \"./CellItem\";\r\n\r\nexport const GameBoard = props => {\r\n  return (\r\n    <div id=\"grid\">\r\n      {props.cells.map((item, i) => (\r\n        <CellItem key={i} cellKey={item} index={i} {...props} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { GameStages } from \"../helpers\";\r\n\r\nexport const GameSettings = props => {\r\n  const onChange = e => {\r\n    if (e.target.checked) {\r\n      let startPlayer = e.target.dataset.player;\r\n      console.log(\"e\", startPlayer);\r\n      props.onChange({ startPlayer });\r\n    }\r\n  };\r\n  const disabled = props.currentStatus !== GameStages.NOT_STARTED;\r\n  return (\r\n    <div className=\"game-settings\">\r\n      <h2>Settings</h2>\r\n      <p>First player: </p>\r\n      <label className=\"cross\">\r\n        <input\r\n          data-player=\"X\"\r\n          disabled={disabled}\r\n          onChange={onChange}\r\n          defaultChecked\r\n          type=\"radio\"\r\n          name=\"first-player\"\r\n        />\r\n        <span>X</span>\r\n      </label>\r\n      <label className=\"toe\">\r\n        <input\r\n          data-player=\"O\"\r\n          disabled={disabled}\r\n          onChange={onChange}\r\n          type=\"radio\"\r\n          name=\"first-player\"\r\n        />\r\n        <span>O</span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { GameStages } from \"../helpers\";\r\n\r\nconst SwitchStatusContent = props => {\r\n  if (props.currentStatus === GameStages.STARTED) {\r\n    return <div>This is turn for: {props.currentTurn}</div>;\r\n  } else if (props.currentStatus === GameStages.ENDED) {\r\n    if (props.winner) {\r\n      return <div>The winner is {props.winner}</div>;\r\n    } else {\r\n      return <div>There is draw</div>;\r\n    }\r\n  }\r\n  return \"Game not started\";\r\n};\r\n\r\nexport const GameStatus = props => {\r\n  return (\r\n    <div className=\"game-status\">\r\n      <h2>Game status: </h2>\r\n      <SwitchStatusContent {...props} />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { GameStages, processUserAction } from \"./helpers\";\r\nimport { GameBoard, GameSettings, GameStatus } from \"./components\";\r\n\r\nconst defaultState = {\r\n  players: {\r\n    X: \"000000000\",\r\n    O: \"000000000\"\r\n  },\r\n  cells: [...Array(9)],\r\n  currentTurn: \"X\",\r\n  currentStatus: GameStages.NOT_STARTED,\r\n  winner: null,\r\n  settings: {\r\n    startPlayer: \"X\"\r\n  }\r\n};\r\n\r\nexport class TicTacToe extends React.Component {\r\n  state = { ...defaultState };\r\n\r\n  setUserValue = index => {\r\n    let { cells, currentTurn } = this.state;\r\n    let nextTurn = currentTurn === \"X\" ? \"O\" : \"X\";\r\n    const result = processUserAction(cells, index, currentTurn);\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      cells: [...result.updCells],\r\n      currentTurn: nextTurn,\r\n      currentStatus: result.gameStatus,\r\n      winner: result.isWinner ? currentTurn : null\r\n    });\r\n  };\r\n\r\n  onClick = e => {\r\n    let cellIndex = e.target.dataset.index;\r\n    this.setUserValue(cellIndex);\r\n  };\r\n\r\n  onChangeSettings = settings => {\r\n    this.setState({\r\n      ...this.state,\r\n      settings: { ...settings }\r\n    });\r\n  };\r\n\r\n  startGame = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      currentStatus: GameStages.STARTED,\r\n      currentTurn: this.state.settings.startPlayer\r\n    });\r\n  };\r\n\r\n  resetTheGame = () => {\r\n    this.setState({\r\n      ...defaultState\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tic-tac-toe\">\r\n        <div className=\"game\">\r\n          <GameSettings\r\n            currentStatus={this.state.currentStatus}\r\n            onChange={this.onChangeSettings}\r\n          />\r\n          <GameBoard\r\n            onClick={this.onClick}\r\n            cells={this.state.cells}\r\n            currentStatus={this.state.currentStatus}\r\n          />\r\n          <GameStatus\r\n            currentStatus={this.state.currentStatus}\r\n            currentTurn={this.state.currentTurn}\r\n            winner={this.state.winner}\r\n          />\r\n        </div>\r\n\r\n        {this.state.currentStatus === GameStages.NOT_STARTED && (\r\n          <button onClick={this.startGame}>Start Game</button>\r\n        )}\r\n\r\n        {this.state.currentStatus === GameStages.ENDED && (\r\n          <button onClick={this.resetTheGame}>Reset</button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { TicTacToe } from \"./TicTacToe\";\n\nimport \"./styles.css\";\n\nconst App = () => {\n  return (\n    <div className=\"app-wrapper\">\n      <TicTacToe />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}